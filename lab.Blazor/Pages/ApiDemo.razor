@page "/apidemo"

@inject IHttpClientFactory clientFactory
@using lab.Blazor.Data
@using lab.Blazor.Components
@using System.Text.Json

<div class="container">
    <MusInstrumentsList @bind-MusInstruments="musInstruments" SelectedObjectChanged="ShowDetails"></MusInstrumentsList>
    <MusInstrumentDetails @bind-MusInstrument="SelectedMusInstrument"></MusInstrumentDetails>
</div>


@code {
    [Parameter]
    public IEnumerable<MusInstrumentListViewModel> musInstruments { get; set; }

    string apiBaseAddress = "https://localhost:44321/Api/MusInstruments";

    protected override async Task OnInitializedAsync()
    {
        var request = new HttpRequestMessage(HttpMethod.Get, apiBaseAddress);
        var client = clientFactory.CreateClient();
        var response = await client.SendAsync(request); //client.GetAsync(apiBaseAddress);

        if (response.IsSuccessStatusCode)
        {
            using var responseStream = await response.Content.ReadAsStreamAsync();

            musInstruments = await JsonSerializer.DeserializeAsync<IEnumerable<MusInstrumentListViewModel>>(
                responseStream, new JsonSerializerOptions{ PropertyNameCaseInsensitive = true }
            );
        }

    }

    [Parameter]
    public MusInstrumentDetailsViewModel SelectedMusInstrument { get; set; }

    private async Task ShowDetails(int id)
    {
        var client = clientFactory.CreateClient();
        var response = await client.GetAsync(apiBaseAddress + $"/{id}");

        if (response.IsSuccessStatusCode)
        {
            using var responseStream = await response.Content.ReadAsStreamAsync();
            SelectedMusInstrument = await JsonSerializer.DeserializeAsync<MusInstrumentDetailsViewModel>(responseStream);
        }

    }

}
